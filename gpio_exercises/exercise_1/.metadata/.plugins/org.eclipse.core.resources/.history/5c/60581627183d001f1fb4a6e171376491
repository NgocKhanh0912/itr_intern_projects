/**
 * @file       sys_led.h
 * @copyright
 * @license
 * @version    1.0.0
 * @date       06/07/2024
 * @author     Khanh Nguyen Ngoc
 *             Giang Phan Truong
 *             Viet Hoang Xuan
 *
 * @brief      Control LEDs according to each states
 *
 * @note       None
 * @example    None
 */

/* Define to prevent recursive inclusion ------------------------------ */
#ifndef INC_SYSTEM_SYS_LED_H_
#define INC_SYSTEM_SYS_LED_H_

/* Includes ----------------------------------------------------------- */
#include "drv/led.h"

/* Public defines ----------------------------------------------------- */

/* Public enumerate/structure ----------------------------------------- */
typedef enum
{
  STATE_IDLE = 0, // All LEDs are OFF
  STATE_1 = 1, // 1 LED is ON
  STATE_2 = 2, // 2 LED are ON
  STATE_3 = 3, // All LEDs are ON
  LED_1,
  LED_2,
  LED_3,
  LED_12,
  LED_23,
  LED_31,
  LED_123
} state_t;

/* Public macros ------------------------------------------------------ */
/* Public variables --------------------------------------------------- */

/* Public function prototypes ----------------------------------------- */
/**
 * @brief     Control LEDs for STATE_IDLE: LED1, LED2, LED3 are OFF
 *            Delay 1s
 *
 * @param[in]   None
 *
 * @attention   None
 *
 * @return    None
 */
void set_led_for_state_idle();

/**
 * @brief     Control LEDs for STATE_1: LED1 is ON; LED2, LED3 are OFF
 *            Delay 1s
 *
 * @param[in]   LED we want to set ON
 *
 * @attention   None
 *
 * @return    None
 */
void set_led_for_state_1(led_num_t led_num);

/**
 * @brief     Control LEDs for STATE_2: LED2 is ON; LED1, LED3 are OFF
 *            Delay 1s
 *
 * @param[in]   None
 *
 * @attention   None
 *
 * @return    None
 */
void set_led_for_state_2(led_num_t led_num_1, led_num_t led_num_2);

/**
 * @brief     Control LEDs for STATE_3: LED3 is ON; LED1, LED2 are OFF
 *            Delay 1s
 *
 * @param[in]   None
 *
 * @attention   None
 *
 * @return    None
 */
void set_led_for_state_3();

#endif /* INC_SYSTEM_SYS_LED_H_ */
